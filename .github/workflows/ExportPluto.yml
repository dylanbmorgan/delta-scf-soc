# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Install Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1" # This will automatically pick the latest Julia version

      - name: Cache Julia artifacts & such
        uses: julia-actions/cache@v2
        with:
          cache-registries: "true"

      # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
      - name: Set up notebook state cache
        uses: actions/cache@v4
        with:
          path: pluto_state_cache
          key: ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}-${{ hashFiles('**/*jl') }}
          restore-keys: |
            ${{ runner.os }}-pluto_state_cache-v2-${{ hashFiles('**/Project.toml', '**/Manifest.toml', '.github/workflows/*' ) }}

      - name: Run & export Pluto notebooks
        run: |
          julia -e 'using Pkg
            Pkg.activate(mktempdir())
            Pkg.add([
              Pkg.PackageSpec(name="PlutoSliderServer", version="0.3.2-0.3"),
            ])

            import PlutoSliderServer

            PlutoSliderServer.github_action(".";
              Export_cache_dir="pluto_state_cache",
              Export_baked_notebookfile=false,
              Export_baked_state=false,
              # more parameters can go here
            )'

      - uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: docs
          folder: .
          single-commit: true
